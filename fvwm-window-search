#!/usr/bin/env ruby

require_relative './lib'
include FvwmWindowSearch
require 'yaml'

def options_load
  gemspec = eval File.read File.join __dir__, 'pkg.gemspec'
  xdg_config_home = ENV['XDG_CONFIG_HOME'] || File.expand_path('~/.config')
  conf = File.join xdg_config_home, gemspec.name, 'conf.yaml'
  r = File.read conf rescue nil
  YAML.load r, conf rescue errx 1, "invalid config: #{$!}" if r
end

def options
  default = {
    "dmenu" => {               # each key is a corresponding CL option
      "selhook" => File.join(__dir__, "focus.sh %s"),
      "fn" => "Monospace-10",
      "l" => 8,
      "b" => true,
      "i" => true,
    },
    "filter" => {
      "name" => [],
      "resource" => [],
      "class" => ['^Fvwm', '!^FvwmIdent$']
    }
  }

  deep_merge(default, options_load || {})
end

def menu params, text
  cmd = [File.join(__dir__, "_out/dmenu/dmenu")]
  params = params.map do |k,v|
    k = "-"+k
    !!v == v ? k : [k,v]
  end.flatten.map(&:to_s)
  IO.popen(cmd + params, 'w') { |ios| ios.puts text }
end

def main
  opt = options
  winlist = windows_filter(opt["filter"], windows).map do |w|
    "#{w.name} | #{w.class} | #{w.id}"
  end.join "\n"

  menu opt["dmenu"], winlist
end

main
